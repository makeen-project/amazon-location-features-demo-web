name: E2E_Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches: [develop]

jobs:
  e2e-tests:
    name: E2E-Testing
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Create .env file
        run: |
          echo "VITE_AWS_COGNITO_IDENTITY_POOL_IDS=${{ secrets.VITE_AWS_COGNITO_IDENTITY_POOL_IDS }}" > .env
          echo "VITE_AWS_WEB_SOCKET_URLS=${{ secrets.VITE_AWS_WEB_SOCKET_URLS }}" >> .env
          echo "VITE_PINPOINT_IDENTITY_POOL_ID=${{ secrets.VITE_PINPOINT_IDENTITY_POOL_ID }}" >> .env
          echo "VITE_PINPOINT_APPLICATION_ID=${{ secrets.VITE_PINPOINT_APPLICATION_ID }}" >> .env
          echo "VITE_AWS_CF_TEMPLATE=${{ secrets.VITE_AWS_CF_TEMPLATE }}" >> .env
          echo "VITE_APPLE_APP_STORE_LINK=${{ secrets.VITE_APPLE_APP_STORE_LINK }}" >> .env
          echo "VITE_GOOGLE_PLAY_STORE_LINK=${{ secrets.VITE_GOOGLE_PLAY_STORE_LINK }}" >> .env
          echo "VITE_APP_VERSION=${{ secrets.VITE_APP_VERSION }}" >> .env
          echo "VITE_MIGRATE_FROM_GOOGLE_MAPS_PAGE=${{ secrets.VITE_MIGRATE_FROM_GOOGLE_MAPS_PAGE }}" >> .env
          echo "VITE_MIGRATE_A_WEB_APP_PAGE=${{ secrets.VITE_MIGRATE_A_WEB_APP_PAGE }}" >> .env
          echo "VITE_MIGRATE_AN_ANDROID_APP_PAGE=${{ secrets.VITE_MIGRATE_AN_ANDROID_APP_PAGE }}" >> .env
          echo "VITE_MIGRATE_AN_IOS_APP_PAGE=${{ secrets.VITE_MIGRATE_AN_IOS_APP_PAGE }}" >> .env
          echo "VITE_MIGRATE_A_WEB_SERVICE_PAGE=${{ secrets.VITE_MIGRATE_A_WEB_SERVICE_PAGE }}" >> .env
          echo "VITE_PRICING_PAGE=${{ secrets.VITE_PRICING_PAGE }}" >> .env

      - name: Set up Docker
        run: sudo apt-get update && sudo apt-get install -y docker.io

      - name: Build Docker image
        run: npm run docker-build-image

      - name: Delete .env file
        run: rm -rf .env

      - name: Run Docker container
        run: npm run docker-run-container

      - name: Wait for Docker container to be ready
        run: |
          echo "Waiting for the container to be ready..."
          until curl -s ${{ secrets.WEB_DOMAIN }} > /dev/null; do
            echo -n '.'
            sleep 1
          done

      - name: Install Dependencies
        run: npm i

      - name: Run Cypress test
        env:
          CYPRESS_WEB_DOMAIN: ${{ secrets.WEB_DOMAIN }}
          CYPRESS_WEB_DOMAIN_USERNAME: ${{ secrets.WEB_DOMAIN_USERNAME }}
          CYPRESS_WEB_DOMAIN_PASSWORD: ${{ secrets.WEB_DOMAIN_PASSWORD }}
          CYPRESS_IDENTITY_POOL_ID: ${{ secrets.IDENTITY_POOL_ID }}
          CYPRESS_USER_DOMAIN: ${{ secrets.USER_DOMAIN }}
          CYPRESS_USER_POOL_CLIENT_ID: ${{ secrets.USER_POOL_CLIENT_ID }}
          CYPRESS_USER_POOL_ID: ${{ secrets.USER_POOL_ID }}
          CYPRESS_WEB_SOCKET_URL: ${{ secrets.WEB_SOCKET_URL }}
          CYPRESS_COGNITO_EMAIL: ${{ secrets.COGNITO_EMAIL }}
          CYPRESS_COGNITO_PASSWORD: ${{ secrets.COGNITO_PASSWORD }}
          PINPOINT_IDENTITY_POOL_ID: ${{ secrets.VITE_PINPOINT_IDENTITY_POOL_ID }}
          PINPOINT_APPLICATION_ID: ${{ secrets.VITE_PINPOINT_APPLICATION_ID }}
        run: npm run cypress
